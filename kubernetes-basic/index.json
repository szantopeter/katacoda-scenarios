{
  "title": "Build Microservices with Docker and Kubernetes in 30 minutes",
  "description": "Builds microservces from scratch using Docker NodeJS and Kubernetes.",
  "difficulty": "beginner-internediate",
  "time": "20-30 minutes",
  "details": {
    "assets": {
      "host01": [
        {
          "file": "node-client/Dockerfile",
          "target": "~/node-client/"
        },
        {
          "file": "node-client/client.js",
          "target": "~/node-client/"
        },
        {
          "file": "node-server/Dockerfile",
          "target": "~/node-server/"
        },
        {
          "file": "node-server/server.js",
          "target": "~/node-server/"
        },
        {
          "file": "wait.sh",
          "target": "/usr/local/bin/",
          "chmod": "+x"
        },
        {
          "file": "example.yml",
          "target": "~"
        }
      ]
    },
    "steps": [
      {
        "title": "Run nodejs server natively",
        "text": "step1.md"
      },
      {
        "title": "Run nodejs server in docker",
        "text": "step2.md"
      },
      {
        "title": "Run nodejs server in kubernetes",
        "text": "step3.md"
      },
      {
        "title": "Microservices in Kubernetes",
        "text": "step4.md"
      },
      {
        "title": "Kubernetes deployment descriptors",
        "text": "step5.md"
      }
    ],
    "intro": {
      "text": "intro.md",
      "courseData": "courseBase.sh",
      "code": "foreground.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "environment": {
    "uilayout": "terminal",
    "icon": "fa-kubernetes",
    "showvisualise": true,
    "scope": "docker run --name=scope -d --net=host --pid=host --privileged -v /var/run/docker.sock:/var/run/docker.sock:rw weaveworks/scope:1.9.1 --probe.docker=true",
    "scopePort": 4040,
    "showdashboard": true,

    "terminals": [
      {
        "name": "Local server",
        "target": "host01"
      },
      {
        "name": "Docker server",
        "target": "host01"
      }
    ]
  },
  "backend": {
    "imageid": "kubernetes"
  }
}